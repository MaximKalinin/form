{"version":3,"sources":["assets/spring.jpg","assets/summer.jpg","assets/fall.jpg","assets/winter.jpg","components/Input/Input.js","components/Button/Button.js","components/ImageGrid/ImageGrid.js","components/Spinner/Spinner.js","components/ProgressBar/ProgressBar.js","containers/Form/Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","input","props","output","react_default","a","createElement","className","label","valid","touched","placeholder","type","value","onChange","readOnly","readonly","hint","disabled","options","map","option","key","Button","classes","full","push","join","onClick","imageGrid","grid","images","image","name","src","alt","onImageClick","selected","find","spinner","progressBar","style","width","stage","Form","state","animateForm","loading","token","userId","error","errorMessage","fields","id","rules","required","isEmail","minimum","summer","fall","winter","spring","signupHandler","_this","setState","data","email","field","password","returnSecureToken","axios","post","then","res","idToken","localId","nextStage","catch","err","loginHandler","inputHandler","event","Object","toConsumableArray","target","isValid","stageValid","filter","forEach","imageClickHandler","clickedImage","test","length","diff","setTimeout","fetchData","queryParams","get","response","objectSpread","console","log","newField","oldField","sendData","_this2","this","formClasses","ProgressBar_ProgressBar","Input_Input","components_Button_Button","ImageGrid_ImageGrid","Spinner_Spinner","Component","App","containers_Form_Form","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ab9b9258.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/spring.a72c3db1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/summer.8f83450a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/fall.e6ff9957.jpg\";","module.exports = __webpack_public_path__ + \"static/media/winter.b6a5ae8d.jpg\";","import React from 'react';\n\nimport './Input.css';\n\nconst input = (props) => {\n    let output = \n    <div className=\"Input\">\n        <label>{props.label}</label>\n        <input\n        className={(!props.valid && props.touched) ? 'incorrect' : ''} \n        placeholder={props.placeholder} \n        type={props.type} \n        value={props.value} \n        onChange={props.onChange}\n        readOnly={props.readonly} />\n        {!props.valid && props.touched ? <div className=\"hint\">{props.hint}</div> : null}\n    </div>\n    ;\n    if (props.type === 'select') \n    output = \n    <div className=\"Input\">\n        <label>{props.label}</label>\n        <select\n        placeholder={props.placeholder} \n        type={props.type} \n        value={props.value} \n        onChange={props.onChange}\n        disabled={props.readonly}>\n            {props.options.map(option => {\n                return <option key={option}>{option}</option>\n                })\n            }\n        </select>\n    </div>\n    ;\n    return output;\n}\n\nexport default input;","import React from 'react';\n\nimport './Button.css';\n\nconst Button = (props) => {\n    const classes = ['Button'];\n    if (props.full) {\n        classes.push('Full');\n    }\n    return (\n        <button \n        className={classes.join(' ')}\n        onClick={props.onClick} >{props.label}</button>\n    );\n}\n\nexport default Button;","import React from 'react';\n\nimport './ImageGrid.css';\n\nconst imageGrid = (props) => {\n    let grid = \n    <div className=\"ImageGrid\">\n        {\n            props.images.map(image => {\n            return <img \n            key={image.name} \n            src={image.src} \n            alt={image.name}\n            onClick={!props.readonly ? () => props.onImageClick(image.name) : null}\n            className={image.selected ? 'selected' : ''} />\n        })}\n    </div>\n    if (props.readonly && props.images.find(image => image.selected === null)) {\n        grid = null;\n    }\n    return grid\n}\n\nexport default imageGrid;","import React from 'react';\n\nimport './Spinner.css';\n\nconst spinner = () => (\n\t<div className='Loader'>Loading...</div>\n);\n\nexport default spinner;","import React from 'react';\n\nimport './ProgressBar.css';\n\nconst progressBar = (props) => {\n    const style = {width: '0%'};\n    if (props.stage === 1)\n        style.width = '50%';\n    else if (props.stage === 2)\n        style.width = '95%';\n    return (<div className=\"ProgressBar\" style={style}></div>);\n}\n\nexport default progressBar;","import React, { Component } from 'react';\nimport axios from 'axios';\n\nimport spring from '../../assets/spring.jpg';\nimport summer from '../../assets/summer.jpg';\nimport fall from '../../assets/fall.jpg';\nimport winter from '../../assets/winter.jpg';\n\nimport Input from '../../components/Input/Input';\nimport Button from '../../components/Button/Button';\nimport ImageGrid from '../../components/ImageGrid/ImageGrid';\nimport Spinner from '../../components/Spinner/Spinner';\nimport ProgressBar from '../../components/ProgressBar/ProgressBar';\nimport './Form.css';\n//This form has 4 \"screens\" - first one is auth screen (signin or signup), second lets user to write personal information, third collects information about user's interests and the last one shows all the information.\nclass Form extends Component {\n    state = {\n        stage: 0, //this is the number of screen\n        valid: false, //all the inputs are valid?\n        animateForm: false, //helps to fade in the form\n        loading: false,\n        token: null,\n        userId: null,\n        error: false,\n        errorMessage: 'Что-то пошло не так... Попробуйте перезагрузить страницу',\n        fields: [\n            {\n                type: 'email',\n                value: '',\n                hint: 'Это не похоже на E-mail...',\n                valid: false,\n                touched: false,\n                label: 'Ваш E-mail',\n                stage: 0,\n                id: 'email',\n                rules: {\n                    required: true,\n                    isEmail: true\n                }\n            },\n            {\n                type: 'password',\n                value: '',\n                hint: 'Минимум 6 символов',\n                valid: false,\n                touched: false,\n                stage: 0,\n                label: 'Пароль',\n                rules: {\n                    required: true,\n                    minimum: 6\n                }\n            },\n            {\n                type: 'text',\n                value: '',\n                hint: '',\n                valid: false,\n                touched: false,\n                stage: 1,\n                id: 'name',\n                label: 'Ваше имя',\n                rules: {\n                    required: true\n                }\n            },\n            {\n                type: 'select',\n                value: 'мужской',\n                hint: '',\n                valid: true,\n                touched: true,\n                stage: 1,\n                id: 'gender',\n                label: 'Ваш пол',\n                rules: {\n                    required: true\n                },\n                options: ['мужской', 'женский']\n            }\n        ],\n        images : [\n            {\n                selected: false,\n                src: summer,\n                name: 'summer'\n            },\n            {\n                selected: false,\n                src: fall,\n                name: 'fall'\n            },\n            {\n                selected: false,\n                src: winter,\n                name: 'winter'\n            },\n            {\n                selected: false,\n                src: spring,\n                name: 'spring'\n            },\n        ]\n    };\n\n    signupHandler = () => {\n        if (this.state.valid) {\n            this.setState({loading: true});\n            const data = {\n                email: this.state.fields.find(field => field.type === 'email').value,\n                password: this.state.fields.find(field => field.type === 'password').value,\n                returnSecureToken: true\n            };\n            axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/signupNewUser?key=AIzaSyBRDKmG45aKAPtbwaYH7vrGLgcwJ3MAJfM', data)\n            .then(res => {\n                this.setState({loading: false, token: res.data.idToken, userId: res.data.localId});\n                this.nextStage(1);\n            })\n            .catch(err => {\n                this.setState({loading: false, error: true});\n            });\n        }\n    }\n\n    loginHandler = () => {\n        if (this.state.valid) {\n            this.setState({loading: true});\n            const data = {\n                email: this.state.fields.find(field => field.type === 'email').value,\n                password: this.state.fields.find(field => field.type === 'password').value,\n                returnSecureToken: true\n            };\n            axios.post('https://www.googleapis.com/identitytoolkit/v3/relyingparty/verifyPassword?key=AIzaSyBRDKmG45aKAPtbwaYH7vrGLgcwJ3MAJfM', data)\n            .then(res => {\n                this.setState({loading: false, token: res.data.idToken, userId: res.data.localId});\n                this.nextStage(3);\n            })\n            .catch(err => {\n                this.setState({loading: false, error: true});\n            });\n        }\n    }\n    //checks input data \n    inputHandler = (event, label) => {\n        const fields = [...this.state.fields];\n        const field = fields.find(field => (field.label === label));\n        field.value = event.target.value;\n\n        field.touched = true;\n        field.valid = this.isValid(field.value, field.rules);\n\n        let stageValid = true;\n        fields.filter(field => (field.stage === this.state.stage))\n        .forEach(field => {\n            stageValid = stageValid && field.valid;\n        });\n\n        this.setState({fields: fields, valid: stageValid});\n    }\n\n    imageClickHandler = (name) => {\n        const images = [...this.state.images];\n        const clickedImage = images.find(image => (image.name === name));\n        clickedImage.selected = !clickedImage.selected;\n        let valid = false;\n        images.forEach(image => {\n            valid = valid || image.selected;\n        })\n        this.setState({images: images, valid: valid});\n    }\n    //validates value by rules\n    isValid = (value, rules) => {\n        let valid = true;\n        if (rules.required) {\n            valid = valid && (value !== '');\n        }\n        if (rules.isEmail) {\n            // const pattern = /[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\\.)+[a-z0-9](?:[a-z0-9-]*[a-z0-9])?/;\n            const pattern = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n            valid = valid && pattern.test(value);\n        }\n        if (rules.minimum) {\n            valid = valid && value.length >= rules.minimum;\n        }\n        return valid;\n    }\n    //go to next screen\n    nextStage = (diff) => {\n        if (this.state.valid) {\n            const stage = this.state.stage + diff;\n            this.setState({stage: stage, animateForm: true, valid: false});\n            setTimeout(() => {\n                this.setState({animateForm: false});\n            }, 1000);\n            if (stage === 3) this.fetchData();\n        }\n    }\n    //loads data from server\n    fetchData = () => {\n        this.setState({loading: true});\n        const queryParams = '?auth=' + this.state.token + '&orderBy=\"userId\"&equalTo=\"' + this.state.userId + '\"';\n        axios.get('https://form-47033.firebaseio.com/users.json' + queryParams)\n        .then(response => {\n            let data = {};\n            for (let key in response.data) {\n                data = {...response.data[key]};\n            }\n            console.log(data);\n            const fields = [...this.state.fields];\n            console.log(fields);\n            data.fields.forEach(newField => {\n                const oldField = fields.find(field => field.id === newField.id);\n                oldField.value = newField.value;\n                oldField.valid = true;\n            });\n            console.log(fields);\n            this.setState({fields: fields, images: data.images, loading: false});\n        })\n        .catch(err => this.setState({loading: false, error: true}));\n    }\n    //sends data to a server\n    sendData = () => {\n        if (this.state.valid) {\n            this.setState({loading: true});\n            const data = {\n                userId: this.state.userId,\n                fields: this.state.fields.filter(field => field.valid && field.id)\n                .map(field => {return {id: field.id, value: field.value}}),\n                images: this.state.images.filter(image => image.selected),\n            };\n            axios.post('https://form-47033.firebaseio.com/users.json?auth=' + this.state.token, data)\n            .then(res => {\n                this.nextStage(1);\n                this.setState({loading: false});\n                this.fetchData();\n            })\n            .catch(err => {\n                this.setState({loading: false, error: true})\n            });\n        }\n    }\n\n    render() {\n        const formClasses = ['Form'];\n        if (this.state.animateForm) formClasses.push('appear');\n\n        let output = null;\n        if (this.state.stage === 0) \n        output = \n        <div className={formClasses.join(' ')}>\n            <ProgressBar stage={this.state.stage} />\n            <h1>Давайте знакомиться!</h1>\n            {this.state.fields.filter(field => (field.stage === this.state.stage))\n            .map(field => {\n                return (<Input\n                    key={field.type} \n                    label={field.label} \n                    hint={field.hint} \n                    type={field.type} \n                    value={field.value} \n                    onChange={(event) => this.inputHandler(event, field.label)}\n                    valid={field.valid}\n                    touched={field.touched}\n                    options={field.options} />);\n            })}\n            <Button label=\"Войти\" onClick={this.loginHandler} />\n            <Button label=\"Регистрация\" full={this.state.valid} onClick={this.signupHandler} />\n        </div>\n        ;\n        else if (this.state.stage === 1)\n        output =\n        <div className={formClasses.join(' ')}>\n            <ProgressBar stage={this.state.stage} />\n            <h1>Расскажите о себе</h1>\n            {this.state.fields.filter(field => (field.stage === this.state.stage))\n            .map(field => {\n                return (<Input\n                    key={field.type} \n                    label={field.label} \n                    hint={field.hint} \n                    type={field.type} \n                    value={field.value} \n                    onChange={(event) => this.inputHandler(event, field.label)}\n                    valid={field.valid}\n                    touched={field.touched}\n                    options={field.options} />);\n            })}\n            <Button label=\"Далее\" full={this.state.valid} onClick={() => this.nextStage(1)} />\n        </div>\n        ;\n        else if (this.state.stage === 2)\n        output = \n        <div className={formClasses.join(' ')}>\n            <ProgressBar stage={this.state.stage} />\n            <h1>Выберите темы для отслеживания</h1>\n            <ImageGrid images={this.state.images} onImageClick={this.imageClickHandler} />\n            <Button label=\"Закончить\" full={this.state.valid} onClick={this.sendData} />\n        </div>\n        ;\n        else if (this.state.stage === 3) {\n            output = \n            <div className={formClasses.join(' ')}>\n                <h1><span className=\"green\">Готово!</span> Вот Ваш профиль:</h1>\n                {this.state.fields.filter(field => field.valid && field.id)\n                .map(field => {\n                    return (<Input\n                        key={field.type} \n                        label={field.label} \n                        hint={field.hint} \n                        type={field.type} \n                        value={field.value} \n                        onChange={(event) => this.inputHandler(event, field.label)}\n                        valid={field.valid}\n                        touched={field.touched}\n                        options={field.options}\n                        readonly />);\n                })}\n                {this.state.images.find(image => image.selected) ? <h6>Интересные изображения</h6> : null}\n                <ImageGrid images={this.state.images.filter(image => image.selected)} readonly />\n            </div>\n            ;\n        }\n\n        if (this.state.loading)\n        output = <Spinner />;\n        if (this.state.error)\n        output = <h1>{this.state.errorMessage}</h1>\n        return output;\n    };\n}\n\nexport default Form;","import React, { Component } from 'react';\n\nimport './App.css';\nimport Form from './containers/Form/Form';\n\nclass App extends Component {\n  render() {\n    return (\n      <div className=\"App\">\n        <Form />\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}